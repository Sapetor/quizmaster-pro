# GitLab CI/CD Pipeline for QuizMaster Pro
# Builds and deploys the container automatically

stages:
  - build
  - deploy

variables:
  # Use GitLab's built-in Docker registry
  CONTAINER_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  LATEST_IMAGE: $CI_REGISTRY_IMAGE:latest
  DOCKER_DRIVER: overlay2
  
# Build the Docker image
build:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    # Login to GitLab container registry
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    # Build the image
    - docker build -t $CONTAINER_IMAGE -t $LATEST_IMAGE .
    # Push to registry
    - docker push $CONTAINER_IMAGE
    - docker push $LATEST_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == "main"  # Only build on main branch
    - if: $CI_COMMIT_BRANCH == "master"  # Or master branch

# Deploy the application
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl docker-cli
  script:
    # Stop existing container
    - docker stop quizmaster-pro-app || true
    - docker rm quizmaster-pro-app || true
    
    # Run new container
    - |
      docker run -d \
        --name quizmaster-pro-app \
        --restart unless-stopped \
        -p 3000:3000 \
        -e NODE_ENV=production \
        -e DEBUG_ENABLED=false \
        -e GITLAB_URL=https://localhost:8080 \
        -v /opt/quizmaster-data/results:/app/results \
        -v /opt/quizmaster-data/uploads:/app/uploads \
        $LATEST_IMAGE
    
    # Create data directories if they don't exist
    - mkdir -p /opt/quizmaster-data/{results,uploads}
    
    # Wait for application to start
    - sleep 10
    
    # Test deployment
    - curl -f http://localhost:3000/api/ping || echo "Health check failed"
    
    # Show deployment info
    - echo "QuizMaster Pro deployed successfully!"
    - echo "Access at http://10.80.21.11:3000"
    
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH == "master"
  tags:
    - docker  # Requires a GitLab runner with docker tag